- name: Setup the App
  hosts: webservers
  become: yes
  vars:
    node_exporter_user: exporter
    node_exporter_url: https://github.com/prometheus/node_exporter/releases/download/v1.8.1/node_exporter-1.8.1.linux-amd64.tar.gz
    node_exporter_download_dir: node_exporter-1.8.1.linux-amd64
    node_exporter_executable: node_exporter
    docker_image: elmendez/quick-poll
    docker_container: quick-poll
    db_uri: "sqlite::memory:"

  tasks:
    # INSTALL DOCKER
    - name: Install Docker Dependencies
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Install Docker
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    # INSTALL NODE EXPORTER
    - name: Create user for node-exporter
      user:
        name: "{{ node_exporter_user }}"
        state: present
        createhome: no
        shell: /usr/sbin/nologin
    - name: Download node-exporter
      unarchive:
        src: "{{ node_exporter_url }}"
        remote_src: yes
        dest: /tmp
        creates: "/tmp/{{ node_exporter_download_dir }}"
    - name: Move node-exporter
      copy:
        src: "/tmp/{{ node_exporter_download_dir }}/{{ node_exporter_executable }}"
        remote_src: yes
        dest: /usr/local/bin/
        owner: "{{ node_exporter_user }}"
        group: "{{ node_exporter_user }}"
        mode: '0775'
    - name: Create service
      template:
        src: node-exporter.service.j2
        dest: "/etc/systemd/system/node-exporter.service"
    - name: Restart node-exporter
      service:
        name: node-exporter
        state: restarted
        daemon_reload: yes
        enabled: yes

    # SET UP THE APP
    - name: Pull the App Image
      community.docker.docker_image:
        name: "{{ docker_image }}"
        source: pull
    - name: Create default containers
      community.docker.docker_container:
        name: "{{ docker_container }}"
        image: "{{ docker_image }}:latest"
        state: started
        auto_remove: yes
        env:
          DB_URI: "{{ db_uri }}"
          MIGRATE: "yes"
        ports:
          - "80:80"
          - "3000:3000"
